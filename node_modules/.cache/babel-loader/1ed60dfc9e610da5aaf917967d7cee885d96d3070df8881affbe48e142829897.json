{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1a483ef6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Reset Password\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"success\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"New Password\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"confirm-password\"\n}, \"Confirm Password\", -1 /* HOISTED */));\nconst _hoisted_6 = [\"value\"];\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Reset Password\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers($event => $setup.resetPassword(), [\"prevent\"]))\n  }, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, _toDisplayString($setup.noti), 1 /* TEXT */), _createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.email = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.email]])]), _createElementVNode(\"div\", null, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]])]), _createElementVNode(\"div\", null, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"confirm-password\",\n    name: \"confirm-password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.confirmPassword = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.confirmPassword]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"input\", {\n    type: \"hidden\",\n    name: \"token\",\n    value: $setup.token\n  }, null, 8 /* PROPS */, _hoisted_6)]), _hoisted_7], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"names":["_createElementVNode","class","for","type","_createElementBlock","onSubmit","_cache","_withModifiers","$event","$setup","resetPassword","_hoisted_1","_hoisted_2","_toDisplayString","noti","_hoisted_3","id","name","email","required","_hoisted_4","password","_hoisted_5","confirmPassword","value","token","_hoisted_7"],"sources":["/Users/vinh/Documents/Kiai/abc_hotel/src/views/ResetPasswordView.vue"],"sourcesContent":["<template>\n    <form @submit.prevent=\"resetPassword()\">\n        <h2>Reset Password</h2>\n        <div class=\"success\">\n            {{ noti }}\n        </div>\n        <div>\n            <label for=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" name=\"email\" v-model=\"email\" required>\n        </div>\n        <div>\n            <label for=\"password\">New Password</label>\n            <input type=\"password\" id=\"password\" name=\"password\" v-model=\"password\" required>\n        </div>\n        <div>\n            <label for=\"confirm-password\">Confirm Password</label>\n            <input type=\"password\" id=\"confirm-password\" name=\"confirm-password\" v-model=\"confirmPassword\" required>\n        </div>\n        <div>\n            <input type=\"hidden\" name=\"token\" :value=\"token\">\n        </div>\n        <button type=\"submit\">Reset Password</button>\n    </form>\n</template>\n\n<script>\nimport router from \"@/router\";\nimport axios from \"../config\";\nimport { ref } from \"vue\";\n\nexport default {\n    name: \"ResetPasswordView\",\n\n    setup() {\n        //get token from url\n        const token = window.location.href.split(\"/\").pop();\n        console.log(token);\n\n        const email = ref(\"\");\n        const password = ref(\"\");\n        const confirmPassword = ref(\"\");\n        const timer = ref(6)\n        const noti = ref('')\n        const resetPassword = async () => {\n            try {\n                const response = await axios.post(\"reset-password\", {\n                    token: token,\n                    email: email.value,\n                    password: password.value,\n                    password_confirmation: confirmPassword.value,\n                });\n                console.log(response.data);\n            } catch (error) {\n                console.log(error.response.data.message);\n            } finally {\n                const interval = setInterval(() => {\n                    timer.value -= 1; // Decrease countdown by 1 every second\n                    noti.value = \"Change password successfully, redirect to login page in \" + timer.value + \" seconds\";\n                    if (timer.value === 0) {\n                        clearInterval(interval); // Stop the interval when countdown reaches 0\n                        router.push('/'); // Redirect after countdown reaches 0\n                    }\n                }, 1000);\n            }\n        }\n\n        return {\n            token,\n            email,\n            password,\n            confirmPassword,\n            resetPassword,\n            timer,\n            noti\n        }\n    }\n}\n\n</script>\n\n<style scoped>\nform {\n    width: 500px;\n    margin: auto;\n    padding: 20px;\n    border: 0.5px solid black;\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n}\n\nh2 {\n    text-align: center;\n    font-weight: bold;\n}\n\ndiv {\n    margin-bottom: 10px;\n}\n\nlabel {\n    display: block;\n}\n\ninput[type=\"email\"],\ninput[type=\"password\"] {\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #ddd;\n}\n\nbutton[type=\"submit\"] {\n    display: block;\n    width: 100%;\n    padding: 10px;\n    background-color: rgb(258, 187, 0);\n    color: white;\n    border: none;\n    cursor: pointer;\n}\n</style>"],"mappings":";;gEAEQA,mBAAA,CAAuB,YAAnB,gBAAc;;EACbC,KAAK,EAAC;AAAS;gEAIhBD,mBAAA,CAAgC;EAAzBE,GAAG,EAAC;AAAO,GAAC,OAAK;gEAIxBF,mBAAA,CAA0C;EAAnCE,GAAG,EAAC;AAAU,GAAC,cAAY;gEAIlCF,mBAAA,CAAsD;EAA/CE,GAAG,EAAC;AAAkB,GAAC,kBAAgB;;gEAMlDF,mBAAA,CAA6C;EAArCG,IAAI,EAAC;AAAQ,GAAC,gBAAc;;;uBApBxCC,mBAAA,CAqBO;IArBAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,CAAAC,MAAA,IAAUC,MAAA,CAAAC,aAAa;MAChCC,UAAuB,EACvBX,mBAAA,CAEM,OAFNY,UAEM,EAAAC,gBAAA,CADCJ,MAAA,CAAAK,IAAI,kBAEXd,mBAAA,CAGM,cAFFe,UAAgC,E,gBAChCf,mBAAA,CAAqE;IAA9DG,IAAI,EAAC,OAAO;IAACa,EAAE,EAAC,OAAO;IAACC,IAAI,EAAC,OAAO;+DAAUR,MAAA,CAAAS,KAAK,GAAAV,MAAA;IAAEW,QAAQ,EAAR;iDAAPV,MAAA,CAAAS,KAAK,E,KAE9DlB,mBAAA,CAGM,cAFFoB,UAA0C,E,gBAC1CpB,mBAAA,CAAiF;IAA1EG,IAAI,EAAC,UAAU;IAACa,EAAE,EAAC,UAAU;IAACC,IAAI,EAAC,UAAU;+DAAUR,MAAA,CAAAY,QAAQ,GAAAb,MAAA;IAAEW,QAAQ,EAAR;iDAAVV,MAAA,CAAAY,QAAQ,E,KAE1ErB,mBAAA,CAGM,cAFFsB,UAAsD,E,gBACtDtB,mBAAA,CAAwG;IAAjGG,IAAI,EAAC,UAAU;IAACa,EAAE,EAAC,kBAAkB;IAACC,IAAI,EAAC,kBAAkB;+DAAUR,MAAA,CAAAc,eAAe,GAAAf,MAAA;IAAEW,QAAQ,EAAR;iDAAjBV,MAAA,CAAAc,eAAe,E,KAEjGvB,mBAAA,CAEM,cADFA,mBAAA,CAAiD;IAA1CG,IAAI,EAAC,QAAQ;IAACc,IAAI,EAAC,OAAO;IAAEO,KAAK,EAAEf,MAAA,CAAAgB;yCAE9CC,UAA6C,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}