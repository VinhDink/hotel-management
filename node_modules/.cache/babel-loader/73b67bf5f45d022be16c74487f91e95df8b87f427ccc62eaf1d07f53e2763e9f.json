{"ast":null,"code":"import { toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table-box\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createTextVNode(_toDisplayString($props.tableDatas) + \" \", 1 /* TEXT */), _createCommentVNode(\" <table class=\\\"table\\\">\\n            <tr>\\n                <th v-for=\\\"title in tableTitles\\\" :key=\\\"title\\\">{{ title }}</th>\\n            </tr>\\n            <tr v-for=\\\"datas in tableDatas\\\" :key=\\\"datas.checkin_id\\\">\\n                <td v-for=\\\"data, i in datas\\\" :key=\\\"i\\\">{{ data }}</td>\\n                <td v-if=\\\"actionDanger\\\">\\n                    <div>\\n                        <button class=\\\"danger-button\\\">\\n                            <i class=\\\"bi bi-trash\\\"></i> Delete\\n                        </button>\\n                    </div>\\n                </td>\\n                <td v-if=\\\"actionModify\\\">\\n                    <div>\\n                        <router-link :to=\\\"{ name: 'Modify', params: { id: datas.id } }\\\">\\n                            <button class=\\\"modify-button\\\">\\n                                <i class=\\\"bi bi-pencil-square\\\"></i> Modify\\n                            </button>\\n                        </router-link>\\n                    </div>\\n                </td>\\n                <td v-if=\\\"actionDetail\\\">\\n                    <div>\\n                        <button class=\\\"detail-button\\\" @click=\\\"callParentFunction(datas.id)\\\">\\n                            <i class=\\\"bi bi-ticket-detailed\\\"></i> View detail\\n                        </button>\\n                    </div>\\n                </td>\\n            </tr>\\n        </table> \")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","$props","tableDatas","_createCommentVNode"],"sources":["/Users/vinh/Documents/Kiai/abc_hotel/src/components/DataTable.vue"],"sourcesContent":["<template>\n    <div class=\"table-box\">\n        {{ tableDatas }}\n        <!-- <table class=\"table\">\n            <tr>\n                <th v-for=\"title in tableTitles\" :key=\"title\">{{ title }}</th>\n            </tr>\n            <tr v-for=\"datas in tableDatas\" :key=\"datas.checkin_id\">\n                <td v-for=\"data, i in datas\" :key=\"i\">{{ data }}</td>\n                <td v-if=\"actionDanger\">\n                    <div>\n                        <button class=\"danger-button\">\n                            <i class=\"bi bi-trash\"></i> Delete\n                        </button>\n                    </div>\n                </td>\n                <td v-if=\"actionModify\">\n                    <div>\n                        <router-link :to=\"{ name: 'Modify', params: { id: datas.id } }\">\n                            <button class=\"modify-button\">\n                                <i class=\"bi bi-pencil-square\"></i> Modify\n                            </button>\n                        </router-link>\n                    </div>\n                </td>\n                <td v-if=\"actionDetail\">\n                    <div>\n                        <button class=\"detail-button\" @click=\"callParentFunction(datas.id)\">\n                            <i class=\"bi bi-ticket-detailed\"></i> View detail\n                        </button>\n                    </div>\n                </td>\n            </tr>\n        </table> -->\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'DataTable',\n    props: {\n        tableDatas: {\n            type: Object,\n            required: true\n        },\n        tableTitles: {\n            type: Object,\n            required: true\n        },\n        actionDanger: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        actionModify: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        actionDetail: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        function: {\n            type: Function,\n            required: false,\n        }\n    },\n\n    setup(props) {\n        const callParentFunction = (id) => {\n            props.function(id);\n        }\n        return {\n            callParentFunction\n        }\n    }\n}\n</script>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAW;;uBAAtBC,mBAAA,CAiCM,OAjCNC,UAiCM,G,kCAhCCC,MAAA,CAAAC,UAAU,IAAG,GAChB,iBAAAC,mBAAA,02CA8BY,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}