{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent, ref } from 'vue';\nimport store from '../store';\n// import { createStore } from 'vuex';\nimport axios from '../config';\nimport router from '../router';\nexport default defineComponent({\n  name: 'LoginView',\n  setup() {\n    // const store = createStore(storeConfig)\n    const username = ref('');\n    const password = ref('');\n    const errors = ref('');\n    /** \n     * Submit form\n     * \n     * @return {void}\n     */\n    const submitForm = async () => {\n      try {\n        let response = await axios.post('auth/login', {\n          username: username.value,\n          password: password.value\n        });\n        localStorage.setItem('token', response.data.access_token);\n        localStorage.setItem('isLoggedIn', true);\n        router.push('/');\n        let response2 = await axios.post('auth/me');\n        const role = response2.data.role;\n        localStorage.setItem('role', role);\n        store.commit('setRole');\n      } catch (error) {\n        errors.value = error.response.data.error;\n      }\n    };\n    const email = ref('');\n    const forgotPassword = async () => {\n      try {\n        let response = await axios.post('/forgot-password', {\n          email: email.value\n        });\n        console.log(response.data);\n      } catch (error) {\n        errors.value = error.response.data.error;\n      }\n    };\n    return {\n      username,\n      password,\n      errors,\n      submitForm\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","ref","store","axios","router","name","setup","username","password","errors","submitForm","response","post","value","localStorage","setItem","data","access_token","push","response2","role","commit","error","email","forgotPassword","console","log"],"sources":["/Users/vinh/Documents/Kiai/abc_hotel/src/views/LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"body\">\n    <form @submit.prevent=\"submitForm\" class=\"login-form-box\">\n      <div class=\"input-form\">\n        <div class=\"input-title\">Login</div>\n        <div class=\"error\">\n            {{ errors }}\n          </div>\n        <div class=\"input-box\">\n          <div for=\"username\" class=\"input-label\">Username</div>\n          <input type=\"text\" id=\"username\" name=\"username\" v-model=\"username\" class=\"input\">\n        </div>\n        <div class=\"input-box\">\n          <div for=\"password\" class=\"input-label\">Password</div>\n          <input type=\"password\" id=\"password\" name=\"password\" v-model=\"password\" class=\"input\">\n        </div>\n        <button type=\"submit\" class=\"login-button\">Login</button>\n      </div>\n    </form>\n    <div>\n      <button></button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref } from 'vue'\nimport store from '../store';\n// import { createStore } from 'vuex';\nimport axios from '../config'\nimport router from '../router'\n\nexport default defineComponent({\n  name: 'LoginView',\n\n  setup() {\n    // const store = createStore(storeConfig)\n    const username = ref('');\n    const password = ref('');\n    const errors = ref('');\n    /** \n     * Submit form\n     * \n     * @return {void}\n     */\n     const submitForm = async () => {\n      try {\n        let response = await axios.post('auth/login', {\n          username: username.value,\n          password: password.value\n        })\n        localStorage.setItem('token', response.data.access_token)\n        localStorage.setItem('isLoggedIn', true)\n        router.push('/')\n        let response2 = await axios.post('auth/me')\n        const role = response2.data.role\n        localStorage.setItem('role', role)\n        store.commit('setRole')\n      } catch (error) {\n        errors.value = error.response.data.error\n      }\n    }\n\n    const email = ref('');\n    const forgotPassword = async () => {\n      try {\n        let response = await axios.post('/forgot-password', {\n          email: email.value,\n        })\n        console.log(response.data);\n      } catch (error) {\n        errors.value = error.response.data.error\n      }\n    }\n    return {\n      username,\n      password,\n      errors,\n      submitForm,\n      \n    };\n  },\n})\n</script>\n\n<style scoped>\n.body {\n  background-color: rgb(240, 240, 240);\n  display: flex;\n  flex-direction: column;\n  padding: 100px;\n  border-radius: 3px;\n  min-height: 100vh;\n}\n</style>\n"],"mappings":";AA0BA,SAASA,eAAe,EAAEC,GAAE,QAAS,KAAI;AACzC,OAAOC,KAAI,MAAO,UAAU;AAC5B;AACA,OAAOC,KAAI,MAAO,WAAU;AAC5B,OAAOC,MAAK,MAAO,WAAU;AAE7B,eAAeJ,eAAe,CAAC;EAC7BK,IAAI,EAAE,WAAW;EAEjBC,KAAKA,CAAA,EAAG;IACN;IACA,MAAMC,QAAO,GAAIN,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMO,QAAO,GAAIP,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMQ,MAAK,GAAIR,GAAG,CAAC,EAAE,CAAC;IACtB;;;;;IAKC,MAAMS,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,IAAIC,QAAO,GAAI,MAAMR,KAAK,CAACS,IAAI,CAAC,YAAY,EAAE;UAC5CL,QAAQ,EAAEA,QAAQ,CAACM,KAAK;UACxBL,QAAQ,EAAEA,QAAQ,CAACK;QACrB,CAAC;QACDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACK,IAAI,CAACC,YAAY;QACxDH,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,IAAI;QACvCX,MAAM,CAACc,IAAI,CAAC,GAAG;QACf,IAAIC,SAAQ,GAAI,MAAMhB,KAAK,CAACS,IAAI,CAAC,SAAS;QAC1C,MAAMQ,IAAG,GAAID,SAAS,CAACH,IAAI,CAACI,IAAG;QAC/BN,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEK,IAAI;QACjClB,KAAK,CAACmB,MAAM,CAAC,SAAS;MACxB,EAAE,OAAOC,KAAK,EAAE;QACdb,MAAM,CAACI,KAAI,GAAIS,KAAK,CAACX,QAAQ,CAACK,IAAI,CAACM,KAAI;MACzC;IACF;IAEA,MAAMC,KAAI,GAAItB,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMuB,cAAa,GAAI,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,IAAIb,QAAO,GAAI,MAAMR,KAAK,CAACS,IAAI,CAAC,kBAAkB,EAAE;UAClDW,KAAK,EAAEA,KAAK,CAACV;QACf,CAAC;QACDY,OAAO,CAACC,GAAG,CAACf,QAAQ,CAACK,IAAI,CAAC;MAC5B,EAAE,OAAOM,KAAK,EAAE;QACdb,MAAM,CAACI,KAAI,GAAIS,KAAK,CAACX,QAAQ,CAACK,IAAI,CAACM,KAAI;MACzC;IACF;IACA,OAAO;MACLf,QAAQ;MACRC,QAAQ;MACRC,MAAM;MACNC;IAEF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}