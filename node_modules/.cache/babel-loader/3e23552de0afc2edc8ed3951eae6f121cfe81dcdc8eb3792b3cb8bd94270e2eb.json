{"ast":null,"code":"import { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'RoomView',\n  data() {\n    return {\n      rooms: []\n    };\n  },\n  async mounted() {\n    let results = await this.$axios.get('room');\n    this.rooms = results.data;\n  },\n  setup() {\n    const closeModal = () => {\n      document.getElementById('detail-modal').style.display = 'none';\n    };\n    const openModal = () => {\n      document.getElementById('detail-modal').style.display = 'block';\n    };\n    return {\n      closeModal,\n      openModal\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","name","data","rooms","mounted","results","$axios","get","setup","closeModal","document","getElementById","style","display","openModal"],"sources":["/Users/vinh/Documents/Kiai/abc_hotel/src/views/RoomView.vue"],"sourcesContent":["<template>\n  <div class=\"body\">\n    <div class=\"title-box\">\n      <h1 class=\"title\">Room</h1>\n    </div>\n    <div class=\"table-box\">\n      <table class=\"table\">\n        <tr class=\"\">\n          <th>Room ID</th>\n          <th>Room Name</th>\n          <th>Type</th>\n          <!-- <th>Hour Price</th>\n          <th>Day Price</th>\n          <th>Status</th>\n          <th>Size</th>\n          <th>Balcony</th>\n          <th>View</th>\n          <th>Smoking</th>\n          <th>Floor</th>\n          <th>Bathtub</th>-->\n          <th>Actions</th>\n        </tr>\n        <tr v-for=\"room in rooms\" :key=\"room.id\">\n          <td>{{ room.id }}</td>\n          <td>{{ room.name }}</td>\n          <td>{{ room.type }}</td>\n          <!-- <td>{{ room.hour_price }}</td>\n          <td>{{ room.day_price }}</td>\n          <td v-if=\"room.status == 1\">Available</td>\n          <td v-if=\"room.status == 0\">Unavailable</td>\n          <td>{{ room.size }}</td>\n          <td v-if=\"room.balcony == 1\">Yes</td>\n          <td v-if=\"room.balcony == 0\">No</td>\n          <td>{{ room.view }}</td>\n          <td v-if=\"room.smoking == 1\">Yes</td>\n          <td v-if=\"room.smoking == 0\">No</td>\n          <td>{{ room.floor }}</td>\n          <td v-if=\"room.bathtub == 1\">Yes</td>\n          <td v-if=\"room.bathtub == 0\">No</td> -->\n          <td>\n            <router-link :to=\"{ name: 'Modify', params: { id: room.id } }\">\n              <button class=\"modify-button\">\n                <i class=\"bi bi-pencil-square\"></i> Modify\n              </button>\n            </router-link>\n          </td>\n          <td>\n            <div>\n              <button class=\"detail-button\" @click=\"openModal()\">\n                <i class=\"bi bi-ticket-detailed\"></i> View detail\n              </button>\n            </div>\n          </td>\n        </tr>\n      </table>\n    </div>\n    <div class=\"detail-modal\" id=\"detail-modal\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                <span>Detail</span>\n                <span class=\"close\" @click=\"closeModal()\">&times;</span>\n              </div>\n              <div class=\"modal-body\">\n                <div class=\"modal-icon\">\n                  <i class=\"bi bi-info-circle-fill\"></i>\n                </div>\n                <div>\n                  <div><span class=\"modal-title\">Room id: </span>{{ room.id }}</div>\n                  <div><span class=\"modal-title\">Room name: </span>{{ room.name }}</div>\n                  <div><span class=\"modal-title\">Room type: </span>{{ room.type }}</div>\n                  <div><span class=\"modal-title\">Hour price: </span> {{ room.hour_price }}</div>\n                  <div><span class=\"modal-title\">Day price: </span>{{ room.day_price }}</div>\n                  <div><span class=\"modal-title\">Status: </span><span v-if=\"room.status == 1\">Available</span>\n                    <span v-if=\"room.status == 0\">Unavailable</span>\n                  </div>\n                  <div><span class=\"modal-title\">Size </span> {{ room.size }}</div>\n                  <div><span class=\"modal-title\">Balcony: </span><span v-if=\"room.balcony == 1\">Yes</span>\n                    <span v-if=\"room.balcony == 0\">No</span>\n                  </div>\n                  <div><span class=\"modal-title\">View: </span> {{ room.view }}</div>\n                  <div><span class=\"modal-title\">Smoking: </span><span v-if=\"room.smoking == 1\">Yes</span>\n                    <span v-if=\"room.smoking == 0\">No</span>\n                  </div>\n                  <div><span class=\"modal-title\">Floor: </span> {{ room.vifloorew }}</div>\n                  <div><span class=\"modal-title\">Bathtub: </span><span v-if=\"room.bathtub == 1\">Yes</span>\n                    <span v-if=\"room.bathtub == 0\">No</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'RoomView',\n\n  data() {\n    return {\n      rooms: []\n    }\n  },\n\n  async mounted() {\n    let results = await this.$axios.get('room')\n    this.rooms = results.data\n  },\n\n  setup() {\n    const closeModal = () => {\n      document.getElementById('detail-modal').style.display = 'none'\n    }\n\n    const openModal = () => {\n      document.getElementById('detail-modal').style.display = 'block'\n    }\n    return {\n      closeModal,\n      openModal\n    }\n  }\n})\n</script>\n\n<style scoped>\n@media (min-width: 769px) {\n  .body {\n    background-color: rgb(240, 240, 240);\n    display: flex;\n    flex-direction: column;\n    padding: 20px;\n    border-radius: 3px;\n    min-height: 100%;\n  }\n\n  .title-box {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 40px;\n  }\n\n  .title {\n    order: 0;\n    font-weight: bold;\n  }\n}\n\n@media (max-width:768px) {\n  .body {\n    background-color: rgb(240, 240, 240);\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n  }\n\n  .title-box {\n    display: flex;\n    justify-content: space-between;\n    padding: 10px;\n  }\n\n  .title {\n    order: 0;\n    font-weight: bold;\n  }\n}\n</style>\n"],"mappings":"AA+FA,SAASA,eAAc,QAAS,KAAK;AACrC,eAAeA,eAAe,CAAC;EAC7BC,IAAI,EAAE,UAAU;EAEhBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;IACT;EACF,CAAC;EAED,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAIC,OAAM,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,MAAM;IAC1C,IAAI,CAACJ,KAAI,GAAIE,OAAO,CAACH,IAAG;EAC1B,CAAC;EAEDM,KAAKA,CAAA,EAAG;IACN,MAAMC,UAAS,GAAIA,CAAA,KAAM;MACvBC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACC,KAAK,CAACC,OAAM,GAAI,MAAK;IAC/D;IAEA,MAAMC,SAAQ,GAAIA,CAAA,KAAM;MACtBJ,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACC,KAAK,CAACC,OAAM,GAAI,OAAM;IAChE;IACA,OAAO;MACLJ,UAAU;MACVK;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}