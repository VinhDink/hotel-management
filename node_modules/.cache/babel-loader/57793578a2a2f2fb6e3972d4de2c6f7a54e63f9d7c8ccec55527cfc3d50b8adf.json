{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"body\"\n};\nconst _hoisted_2 = {\n  class: \"login-form\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input-title\"\n}, \"Login\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"input-box\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  for: \"username\",\n  class: \"input-label\"\n}, \"Username\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"input-box\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", {\n  for: \"password\",\n  class: \"input-label\"\n}, \"Password\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"input-box\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"div\", {\n  for: \"confirm-password\",\n  class: \"input-label\"\n}, \"Confirm assword\", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"input-box\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"div\", {\n  for: \"confirm-password\",\n  class: \"input-label\"\n}, \"Confirm assword\", -1 /* HOISTED */);\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"submit-button\"\n}, \"Login\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => _ctx.register && _ctx.register(...args), [\"prevent\"])),\n    class: \"login-form-box\"\n  }, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    name: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.username = $event),\n    class: \"input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.username]])]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.password = $event),\n    class: \"input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.password]])]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    id: \"confirm_password\",\n    name: \"confirm_password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.confirm_password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.confirm_password]])]), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    id: \"confirm_password\",\n    name: \"confirm_password\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.confirm_password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.confirm_password]])]), _hoisted_12])], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","_ctx","register","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","id","name","username","$event","_hoisted_6","_hoisted_7","password","_hoisted_8","_hoisted_9","confirm_password","_hoisted_10","_hoisted_11","_hoisted_12"],"sources":["/Users/vinh/Documents/Kiai/abc_hotel/src/views/RegisterView.vue"],"sourcesContent":["<!-- <template>\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-lg-6\">\n        <h1 class=\"text-center mb-5\">Register</h1>\n        <form @submit.prevent=\"register\" class=\"needs-validation\" novalidate>\n          <div class=\"form-floating mb-3\">\n            <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" v-model=\"username\"\n              placeholder=\"Username\" required>\n            <label for=\"username\">Username</label>\n            <div class=\"invalid-feedback\">\n              Please enter a valid username.\n            </div>\n          </div>\n          <div class=\"form-floating mb-3\">\n            <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" v-model=\"password\"\n              placeholder=\"Password\" required>\n            <label for=\"password\">Password</label>\n            <div class=\"invalid-feedback\">\n              Please enter a valid password.\n            </div>\n          </div>\n          <div class=\"form-floating mb-3\">\n            <input type=\"password\" class=\"form-control\" id=\"confirm_password\" name=\"confirm_password\"\n              v-model=\"confirm_password\" placeholder=\"Confirm Password\" required>\n            <label for=\"confirm_password\">Confirm Password</label>\n            <div class=\"invalid-feedback\">\n              Please confirm your password.\n            </div>\n          </div>\n          <div class=\"form-floating mb-3\">\n            <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" v-model=\"email\" placeholder=\"Email\" required>\n            <label for=\"email\">Email</label>\n            <div class=\"invalid-feedback\">\n              Please enter a valid email address.\n            </div>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n          <div>{{ errors }}</div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template> -->\n\n<template>\n  <div class=\"body\">\n    <form @submit.prevent=\"register\" class=\"login-form-box\">\n      <div class=\"login-form\">\n        <div class=\"input-title\">Login</div>\n        <div class=\"input-box\">\n          <div for=\"username\" class=\"input-label\">Username</div>\n          <input type=\"text\" id=\"username\" name=\"username\" v-model=\"username\" class=\"input\">\n        </div>\n        <div class=\"input-box\">\n          <div for=\"password\" class=\"input-label\">Password</div>\n          <input type=\"password\" id=\"password\" name=\"password\" v-model=\"password\" class=\"input\">\n        </div>\n        <div class=\"input-box\">\n          <div for=\"confirm-password\" class=\"input-label\">Confirm assword</div>\n          <input type=\"password\" class=\"form-control\" id=\"confirm_password\" name=\"confirm_password\" v-model=\"confirm_password\">\n        </div>\n        <div class=\"input-box\">\n          <div for=\"confirm-password\" class=\"input-label\">Confirm assword</div>\n          <input type=\"password\" class=\"form-control\" id=\"confirm_password\" name=\"confirm_password\" v-model=\"confirm_password\">\n        </div>\n        <button type=\"submit\" class=\"submit-button\">Login</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from '../config'\nimport { ref, defineComponent } from 'vue'\nimport storeConfig from '../store';\nimport { createStore } from 'vuex';\n\nexport default defineComponent({\n  name: 'RegisterView',\n\n  setup() {\n    const store = createStore(storeConfig)\n    const username = ref('')\n    const password = ref('')\n    const confirm_password = ref('')\n    const email = ref('')\n    const errors = ref('')\n\n    /**\n     * Register\n     * \n     * @return {void}\n     */\n    const register = async () => {\n      try {\n        const response = await axios.post('register', {\n          username: username.value,\n          password: password.value,\n          confirm_password: confirm_password.value,\n          email: email.value\n        })\n\n        store.dispatch('login', { username: username.value, password: password.value })\n        console.log(response.data);\n      }\n      catch (error) {\n        errors.value = error.response.data.message\n        console.log(errors.value);\n      }\n    }\n\n    return {\n      username,\n      password,\n      confirm_password,\n      email,\n      errors,\n      register,\n    };\n  }\n})\n</script>\n"],"mappings":";;EA8COA,KAAK,EAAC;AAAM;;EAERA,KAAK,EAAC;AAAY;gCACrBC,mBAAA,CAAoC;EAA/BD,KAAK,EAAC;AAAa,GAAC,OAAK;;EACzBA,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAAsD;EAAjDC,GAAG,EAAC,UAAU;EAACF,KAAK,EAAC;GAAc,UAAQ;;EAG7CA,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAAsD;EAAjDC,GAAG,EAAC,UAAU;EAACF,KAAK,EAAC;GAAc,UAAQ;;EAG7CA,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAAqE;EAAhEC,GAAG,EAAC,kBAAkB;EAACF,KAAK,EAAC;GAAc,iBAAe;;EAG5DA,KAAK,EAAC;AAAW;iCACpBC,mBAAA,CAAqE;EAAhEC,GAAG,EAAC,kBAAkB;EAACF,KAAK,EAAC;GAAc,iBAAe;iCAGjEC,mBAAA,CAA0D;EAAlDE,IAAI,EAAC,QAAQ;EAACH,KAAK,EAAC;GAAgB,OAAK;;;uBApBvDI,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJJ,mBAAA,CAqBO;IArBAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,IAAA,CAAAC,QAAA,IAAAD,IAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;IAAET,KAAK,EAAC;MACrCC,mBAAA,CAmBM,OAnBNW,UAmBM,GAlBJC,UAAoC,EACpCZ,mBAAA,CAGM,OAHNa,UAGM,GAFJC,UAAsD,E,gBACtDd,mBAAA,CAAkF;IAA3EE,IAAI,EAAC,MAAM;IAACa,EAAE,EAAC,UAAU;IAACC,IAAI,EAAC,UAAU;+DAAUP,IAAA,CAAAQ,QAAQ,GAAAC,MAAA;IAAEnB,KAAK,EAAC;iDAAhBU,IAAA,CAAAQ,QAAQ,E,KAEpEjB,mBAAA,CAGM,OAHNmB,UAGM,GAFJC,UAAsD,E,gBACtDpB,mBAAA,CAAsF;IAA/EE,IAAI,EAAC,UAAU;IAACa,EAAE,EAAC,UAAU;IAACC,IAAI,EAAC,UAAU;+DAAUP,IAAA,CAAAY,QAAQ,GAAAH,MAAA;IAAEnB,KAAK,EAAC;iDAAhBU,IAAA,CAAAY,QAAQ,E,KAExErB,mBAAA,CAGM,OAHNsB,UAGM,GAFJC,UAAqE,E,gBACrEvB,mBAAA,CAAqH;IAA9GE,IAAI,EAAC,UAAU;IAACH,KAAK,EAAC,cAAc;IAACgB,EAAE,EAAC,kBAAkB;IAACC,IAAI,EAAC,kBAAkB;+DAAUP,IAAA,CAAAe,gBAAgB,GAAAN,MAAA;iDAAhBT,IAAA,CAAAe,gBAAgB,E,KAErHxB,mBAAA,CAGM,OAHNyB,WAGM,GAFJC,WAAqE,E,gBACrE1B,mBAAA,CAAqH;IAA9GE,IAAI,EAAC,UAAU;IAACH,KAAK,EAAC,cAAc;IAACgB,EAAE,EAAC,kBAAkB;IAACC,IAAI,EAAC,kBAAkB;+DAAUP,IAAA,CAAAe,gBAAgB,GAAAN,MAAA;iDAAhBT,IAAA,CAAAe,gBAAgB,E,KAErHG,WAA0D,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}