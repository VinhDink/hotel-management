{"ast":null,"code":"import router from \"@/router\";\nimport axios from \"../config\";\nimport { ref } from \"vue\";\nexport default {\n  name: \"ResetPasswordView\",\n  setup() {\n    //get token from url\n    const token = window.location.href.split(\"/\").pop();\n    console.log(token);\n    const email = ref(\"\");\n    const password = ref(\"\");\n    const confirmPassword = ref(\"\");\n    const timer = ref(6);\n    const noti = ref('');\n    const resetPassword = async () => {\n      try {\n        const response = await axios.post(\"reset-password\", {\n          token: token,\n          email: email.value,\n          password: password.value,\n          password_confirmation: confirmPassword.value\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.log(error.response.data.message);\n      } finally {}\n    };\n    return {\n      token,\n      email,\n      password,\n      confirmPassword,\n      resetPassword,\n      timer,\n      noti\n    };\n  }\n};","map":{"version":3,"names":["router","axios","ref","name","setup","token","window","location","href","split","pop","console","log","email","password","confirmPassword","timer","noti","resetPassword","response","post","value","password_confirmation","data","error","message"],"sources":["/Users/vinh/Documents/Kiai/abc_hotel/src/views/ResetPasswordView.vue"],"sourcesContent":["<template>\n    <form @submit.prevent=\"resetPassword()\">\n        <h2>Reset Password</h2>\n        <div class=\"success\">\n            {{ computedNoti }}\n        </div>\n        <div>\n            <label for=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" name=\"email\" v-model=\"email\" required>\n        </div>\n        <div>\n            <label for=\"password\">New Password</label>\n            <input type=\"password\" id=\"password\" name=\"password\" v-model=\"password\" required>\n        </div>\n        <div>\n            <label for=\"confirm-password\">Confirm Password</label>\n            <input type=\"password\" id=\"confirm-password\" name=\"confirm-password\" v-model=\"confirmPassword\" required>\n        </div>\n        <div>\n            <input type=\"hidden\" name=\"token\" :value=\"token\">\n        </div>\n        <button type=\"submit\">Reset Password</button>\n    </form>\n</template>\n\n<script>\nimport router from \"@/router\";\nimport axios from \"../config\";\nimport { ref } from \"vue\";\n\nexport default {\n    name: \"ResetPasswordView\",\n\n    setup() {\n        //get token from url\n        const token = window.location.href.split(\"/\").pop();\n        console.log(token);\n\n        const email = ref(\"\");\n        const password = ref(\"\");\n        const confirmPassword = ref(\"\");\n        const timer = ref(6)\n        const noti = ref('')\n        const resetPassword = async () => {\n            try {\n                const response = await axios.post(\"reset-password\", {\n                    token: token,\n                    email: email.value,\n                    password: password.value,\n                    password_confirmation: confirmPassword.value,\n                });\n                console.log(response.data);\n            } catch (error) {\n                console.log(error.response.data.message);\n            } finally {\n            }\n        }\n\n        return {\n            token,\n            email,\n            password,\n            confirmPassword,\n            resetPassword,\n            timer,\n            noti\n        }\n    }\n}\n\n</script>\n\n<style scoped>\nform {\n    width: 500px;\n    margin: auto;\n    padding: 20px;\n    border: 0.5px solid black;\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n}\n\nh2 {\n    text-align: center;\n    font-weight: bold;\n}\n\ndiv {\n    margin-bottom: 10px;\n}\n\nlabel {\n    display: block;\n}\n\ninput[type=\"email\"],\ninput[type=\"password\"] {\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #ddd;\n}\n\nbutton[type=\"submit\"] {\n    display: block;\n    width: 100%;\n    padding: 10px;\n    background-color: rgb(258, 187, 0);\n    color: white;\n    border: none;\n    cursor: pointer;\n}\n</style>"],"mappings":"AA0BA,OAAOA,MAAK,MAAO,UAAU;AAC7B,OAAOC,KAAI,MAAO,WAAW;AAC7B,SAASC,GAAE,QAAS,KAAK;AAEzB,eAAe;EACXC,IAAI,EAAE,mBAAmB;EAEzBC,KAAKA,CAAA,EAAG;IACJ;IACA,MAAMC,KAAI,GAAIC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;IACnDC,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;IAElB,MAAMQ,KAAI,GAAIX,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMY,QAAO,GAAIZ,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMa,eAAc,GAAIb,GAAG,CAAC,EAAE,CAAC;IAC/B,MAAMc,KAAI,GAAId,GAAG,CAAC,CAAC;IACnB,MAAMe,IAAG,GAAIf,GAAG,CAAC,EAAE;IACnB,MAAMgB,aAAY,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMlB,KAAK,CAACmB,IAAI,CAAC,gBAAgB,EAAE;UAChDf,KAAK,EAAEA,KAAK;UACZQ,KAAK,EAAEA,KAAK,CAACQ,KAAK;UAClBP,QAAQ,EAAEA,QAAQ,CAACO,KAAK;UACxBC,qBAAqB,EAAEP,eAAe,CAACM;QAC3C,CAAC,CAAC;QACFV,OAAO,CAACC,GAAG,CAACO,QAAQ,CAACI,IAAI,CAAC;MAC9B,EAAE,OAAOC,KAAK,EAAE;QACZb,OAAO,CAACC,GAAG,CAACY,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACE,OAAO,CAAC;MAC5C,UAAU,CACV;IACJ;IAEA,OAAO;MACHpB,KAAK;MACLQ,KAAK;MACLC,QAAQ;MACRC,eAAe;MACfG,aAAa;MACbF,KAAK;MACLC;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}