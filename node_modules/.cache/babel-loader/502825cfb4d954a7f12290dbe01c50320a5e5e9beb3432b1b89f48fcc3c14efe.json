{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"chart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"canvas\", _hoisted_1, null, 512 /* NEED_PATCH */), _createTextVNode(\" \" + _toDisplayString($data.chart), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["ref","_createElementVNode","_hoisted_1","_toDisplayString","$data","chart"],"sources":["/Users/vinh/Documents/Kiai/abc_hotel/src/components/HotelChart.vue"],"sourcesContent":["<template>\n    <canvas ref=\"chart\"></canvas>\n    {{ chart}}\n  </template>\n  \n  <script>\n  import { Chart } from 'chart.js/auto';\n  \n  export default {\n    name: 'HotelChart',\n    props: {\n      chartData: {\n        type: Object,\n        required: true\n      }\n    },\n    data() {\n      return {\n        chart: null\n      }\n    },\n    watch: {\n      chartData() {\n        this.chart.data.datasets[0].data = this.chartData.datasets[0].data;\n        this.chart.update();\n      }\n    },\n    mounted() {\n      const ctx = this.$refs.chart.getContext('2d');\n      this.chart = new Chart(ctx, {\n        type: 'line',\n        data: this.chartData\n      });\n    }\n  }\n  </script>\n"],"mappings":";;EACYA,GAAG,EAAC;AAAO;;6DAAnBC,mBAAA,CAA6B,UAA7BC,UAA6B,+B,iBAAA,GAC7B,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}